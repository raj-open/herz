# ----------------------------------------------------------------
# Automates pre-commit actions,
# e.g. linting, prettify, removal of artefacts/sensitive data, etc.
#
# NOTE: To use this run
#
# 1. python3 -m pip install pre-commit
# 2. python3 -m pre-commit install # in the repository
#
# After completing 2, upon every commit the hook will be called.
# ----------------------------------------------------------------
default_install_hook_types:
  - pre-commit
  - pre-push

fail_fast: true

repos:
  - repo: local
    hooks:

    - id: lint
      name: Lint files
      description: |-
        This hook performs linting on files.
      files: '^(src|tests|notebooks|examples)/.*\.(py|ipynb)$'
      language: system
      args: []
      entry: |-
        bash -c 'just githook-lint "$0"'
      pass_filenames: true
      verbose: true
      stages: [ pre-commit ]

    - id: test-py
      name: Test python files
      description: |-
        This hook performs checks to see if test in this file are green.
      files: '^tests/(tests_[^/]+/)*tests_[^/]+\.py$'
      language: system
      args: []
      entry: |-
        bash -c 'just githook-test-py "$0"'
      pass_filenames: true
      verbose: true
      stages: [ pre-commit ]

    - id: clean-nb
      name: Clean python notebooks
      description: |-
        This hook cleans python notebooks.
      files: '^(notebooks)/.*\.ipynb$'
      language: system
      pass_filenames: true
      args: []
      entry: |-
        bash -c 'just githook-clean-ipynb "$0"'
      verbose: true
      stages: [ pre-commit ]

    - id: qa
      name: QA
      description: |-
        This hook performs QA on all files before a push.
      files: '.*'
      language: system
      pass_filenames: false
      args: []
      entry: |-
        bash -c 'just githook-qa'
      verbose: true
      stages: [ pre-push ]
