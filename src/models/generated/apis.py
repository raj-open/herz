# generated by datamodel-codegen:
#   filename:  schema-apis.yaml

from __future__ import annotations

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, SecretStr


class MetaData(BaseModel):
    """
    Meta data of file
    """

    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    path: str = Field(
        ..., description="Full path to file (directory + filename incl. extension)."
    )
    filename: str = Field(
        ..., description="Filename (without path, but with extension)."
    )
    basename: str = Field(
        ..., description="Filename without path and without extension."
    )
    ext: str = Field(..., description="Extension of file.")
    size: int = Field(..., description="Size of file in bytes")
    time_created: AwareDatetime | None = Field(default=None, alias="time-created")
    time_updated: AwareDatetime | None = Field(default=None, alias="time-updated")


class Credentials(BaseModel):
    """
    Stores username and token in a safe way to prevent exposure
    e.g. in serialisations or logging.
    """

    model_config = ConfigDict(
        extra="forbid",
        populate_by_name=True,
    )
    username: str
    token: SecretStr
