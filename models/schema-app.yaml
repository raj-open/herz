openapi: 3.0.3
info:
  version: 0.1.1
  title: Schemata for internal application configuration.
servers:
  - url: "https://define.me"
paths: {}
components:
  schemas:
    # ----------------------------------------------------------------
    # CLASSES
    # ----------------------------------------------------------------

    # --------------------------------
    # Internal Repo Info
    # --------------------------------

    RepoInfo:
      description: |-
        Basic infos about repo
      type: object
      required:
        - name
        - description
        - version
        - homepage
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        homepage:
          type: string
          format: uri
      # NOTE: allow this, as this will be parsed from pyproject.toml
      additionalProperties: true

    # --------------------------------
    # AppConfig
    # --------------------------------

    AppConfig:
      description: |-
        Data model for all parts of the app configuration.
      type: object
      required:
        - info
        - settings
      properties:
        info:
          $ref: "#/components/schemas/AppInfo"
        settings:
          description: |-
            Primary settings
          type: object
          required:
            - timezone
            - units
            - matching
            - polynomial
            - interpolation
            - exponential
            - points
          properties:
            timezone:
              type: string
            units:
              description: |-
                Standard units for physical conversion.
              type: object
              additionalProperties:
                type: string
                default: {}
            matching:
              $ref: "#/components/schemas/MatchingConfig"
            polynomial:
              description: |-
                Conditions for initial fitting (polynomial) curves to raw data.
              $ref: "#/components/schemas/PolynomialConfig"
            interpolation:
              $ref: "#/components/schemas/InterpConfig"
            exponential:
              description: |-
                Settings to fit exponential model.
              $ref: "#/components/schemas/FitExpConfig"
            points:
              description: |-
                Specifications used to compute special points.
              $ref: "#/components/schemas/SpecialPointsConfigs"
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - matching settings
    # --------------------------------

    MatchingConfig:
      description: |-
        Designates to each data series the name of a special point
        to be used for alignment of the data series.
        These can then be used as a starting points.
      type: object
      required:
        - pressure
        - volume
      properties:
        pressure:
          type: string
        volume:
          type: string
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - polynomial setting
    # --------------------------------

    PolynomialConfig:
      description: |-
        Setting on for polynomial fitting for cycles within a time-series.
      type: object
      required:
        - pressure
        - volume
      properties:
        pressure:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/PolyCritCondition"
            - $ref: "#/components/schemas/PolyDerCondition"
            - $ref: "#/components/schemas/PolyIntCondition"
        volume:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/PolyCritCondition"
            - $ref: "#/components/schemas/PolyDerCondition"
            - $ref: "#/components/schemas/PolyIntCondition"
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - polynomial critical conditions
    # --------------------------------

    PolyCritCondition:
      description: |-
        A condition to force on fitted polynomial of the form:
        - The `n`-th derivative has `h` critical points.
      type: object
      required:
        - derivative
        - num-critical
      properties:
        derivative:
          type: integer
          minimum: 0
        num-critical:
          type: integer
          minimum: 0
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - polynomial derivative condition
    # --------------------------------

    PolyDerCondition:
      description: |-
        A condition to force on fitted polynomial of the form:

        - The `n`-th derivative at time point `t` must be `0`.
      type: object
      required:
        - derivative
        - time
      properties:
        derivative:
          type: integer
          minimum: 0
        time:
          type: number
          # minimum: 0.
          # maximum: 1.
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - polynomial integral condition
    # --------------------------------

    PolyIntCondition:
      description: |-
        A condition to force on fitted polynomial of the form:

        - The integral over the union of the time intervals must be `0`.
      type: object
      required:
        - times
      properties:
        times:
          type: array
          items:
            $ref: "#/components/schemas/TimeInterval"
          minItems: 1
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - Time interval
    # --------------------------------

    TimeInterval:
      description: |-
        Defines end points of a time-interval (`a` to `b`).
      type: object
      required:
        - a
        - b
      properties:
        a:
          type: number
        b:
          type: number
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - special points configs
    # --------------------------------

    SpecialPointsConfigs:
      description: |-
        Configuration of special points.
      type: object
      required:
        - pressure
        - volume
        - pv
      properties:
        pressure:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SpecialPointsConfig"
        volume:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SpecialPointsConfig"
        pv:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SpecialPointsConfigPV"
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - special points config
    # --------------------------------

    SpecialPointsConfig:
      description: |-
        Configuration of special points.
      type: object
      required:
        - name
        # - name-simple <- if empty defaults to value of 'name'
        # - spec
        # - marker
      properties:
        name:
          description: |-
            Name of special point.
          type: string
        name-simple:
          description: |-
            A table-friendly version of the name.
          type: string
        description:
          description: |-
            A table-friendly description of the point.
          type: string
        ignore:
          description: |-
            Option to suppress plotting.
          type: boolean
          default: false
        ignore-2D:
          description: |-
            Option to suppress plotting in 2D Plot.
          type: boolean
          default: false
        derivatives:
          descriptions: |-
            Set for which derivatives the point is to appear.

            - If `[]`, then will display for none.
            - If `null`, then will display for all.
          type: array
          items:
            type: integer
        found:
          description: |-
            Option to mark whether point successfully computed.
          type: boolean
          default: false
        time:
          description: |-
            Time co-ordinate of special point (initially normalised to `[0, 1]`).
          type: number
          default: -1
        value:
          description: |-
            Value of special point.
          type: number
          default: -1
        spec:
          description: |-
            Optional specifications for computation of special point.
          $ref: "#/components/schemas/SpecialPointsSpec"
        format:
          description: |-
            Settings for plot marker.
          $ref: "#/components/schemas/PointFormat"
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - Special Points 2D
    # --------------------------------

    SpecialPointsConfigPV:
      description: |-
        Information associated with the computation of a special point
        on the PV-curve.
      required:
        - name
        - kind
        - format
      properties:
        name:
          description: |-
            Name of special point.
          type: string
        name-simple:
          description: |-
            A table-friendly version of the name.
          type: string
        description:
          description: |-
            A table-friendly description of the point.
          type: string
        ignore:
          description: |-
            Option to suppress plotting.
          type: boolean
          default: false
        visible:
          description: |-
            Point is shown, but deactivated by default.
          type: boolean
          default: true
        found:
          description: |-
            Option to mark whether point successfully computed.
          type: boolean
          default: false
        kind:
          $ref: "#/components/schemas/EnumSpecialPointPVKind"
          default: GRADIENT
        value:
          type: number
          default: -1
        data:
          type: array
          items:
            $ref: "#/components/schemas/PointPV"
          default: []
        format:
          description: |-
            Settings for plot marker/line.
          $ref: "#/components/schemas/PointFormat"
      additionalProperties: false

    PointPV:
      description: |-
        Structure of a point in the P-V space.
      type: object
      required:
        - pressure
        - volume
      properties:
        pressure:
          type: number
        volume:
          type: number
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - special points specification
    # --------------------------------

    SpecialPointsSpec:
      description: |-
        A single condition used to defined special point in terms of

        - position relative to other special points,
        - criticality of an n'th derivative

        NOTE: The 'before' / 'after' conditions are defined purely in terms of the peak-to-peak cycle.
      type: object
      required:
        - kind
        - after
        - before
      properties:
        derivative:
          description: |-
            Order of the n'th derivative condition.
          type: integer
          minimum: 0
          default: 0
        kind:
          description: |-
            Kind of n'th derivative condition: (local) min/max.
          $ref: "#/components/schemas/EnumCriticalPoints"
        reuse:
          description: |-
            Whether the recognised point is to be reused for the 2nd round of fitting.
          type: boolean
          default: false
        strict:
          description: |-
            Whether the point is to occur strictly inside the cycle.

            Default: `true`.

            NOTE: Only set to `false` for a time point that is the peak value.
          type: boolean
          default: true
        after:
          description: |-
            The currently specified point has to occur after this list of named points.
          type: array
          items:
            type: string
        before:
          description: |-
            The currently specified point has to occur before this list of named points.
          type: array
          items:
            type: string
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - Points display settings
    # --------------------------------

    PointFormat:
      description: |-
        Style settings for plotting special points/lines.

        - `size` - <int> size of marker or width of line.
        - `colour` - <string> colour of marker/line.
            can be either a name or of the form
            `'rgba(<float>,<float>,<float>,<float>)'`, `'hsla(<int>,<float>%,<float>%,<float>)'`, etc.
        - `symbol` - <string> see <https://plotly.com/python/marker-style>.
        - (optional) `text` - <string> symbol for text inside the plot
        - `text-position` - <string> where text is to be positioned,
            Values: 'top|middle|bottom left|center|right'

      type: object
      required: []
      properties:
        size:
          description: |-
            In the case of marker settings this determines the symbol-size.
            In the case of line settings this determines the line-width.
          type: integer
          default: 2
        colour:
          type: string
          default: black
        symbol:
          description: |-
            In the case of marker settings this determines the symbol.
            In the case of line settings this determines the line-style.
          type: string
          default: 'x'
        text:
          type: string
          default: null
        text-position:
          type: string
          # top/middle/bottom left/center/right
          default: 'top center'
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - Interpolation Configs
    # --------------------------------

    InterpConfig:
      description: |-
        Configuration options for interpolation.
      type: object
      required: []
      properties:
        polynomial:
          description: |-
            Settings to fit polynomial interpolation.
          type: object
          required:
            - pressure
            # - volume
          properties:
            pressure:
              $ref: "#/components/schemas/InterpConfigPoly"
            volume:
              $ref: "#/components/schemas/InterpConfigPoly"
          additionalProperties: false
        trigonometric:
          description: |-
            Settings to fit trigonometric interpolation.
          type: object
          required:
            - pressure
            # - volume
          properties:
            pressure:
              $ref: "#/components/schemas/InterpConfigTrig"
            volume:
              $ref: "#/components/schemas/InterpConfigTrig"
          additionalProperties: false
      additionalProperties: false

    InterpConfigPoly:
      description: |-
        Settings use to fit polynomial interpolations.
      type: object
      required: []
      properties: {}
      additionalProperties: false

    InterpConfigTrig:
      description: |-
        Settings used to fit trigonometric interpolations.
      type: object
      required:
        - solver
        - points
        - intervals
        - initial
      properties:
        solver:
          description: |-
            Settings for the solver.
          type: object
          required:
            - n-max
            - drift
          properties:
            n-max:
              type: integer
              minimum: 0
            mode:
              description: |-
                Determines the mode in which the fitting algorithm is executed.
              $ref: "#/components/schemas/EnumSolver"
              default: BRUTE-FORCE
            model:
              description: |-
                Indicates whether to fit against the data or another model.
              $ref: "#/components/schemas/EnumModelKind"
              default: DATA
            drift:
              description: |-
                Indicates whether to include drift term in model.
              type: boolean
          additionalProperties: false
        points:
          description: |-
            Schema for values to be used in intervals and conditions
          type: object
          additionalProperties:
            type: string
        intervals:
          description: |-
            Defines the spatial domain over which the model is to be defined.
          type: array
          items:
            $ref: "#/components/schemas/PairString"
          minItems: 1
        conditions:
          description: |-
            Provides restrictions on the frequency.
          type: array
          items:
            $ref: "#/components/schemas/FitTrigCondition"
          default: []
        initial:
          $ref: "#/components/schemas/FitTrigIntialisation"
      additionalProperties: false

    FitTrigCondition:
      description: |-
        Conditions to define bounds on the frequency.
      type: object
      required:
        - kind
        - value
      properties:
        kind:
          description: |-
            Kind of bound.
          $ref: "#/components/schemas/EnumBoundKind"
        value:
          description: |-
            Parseable expression for the value of the bound.
          type: string
      additionalProperties: false

    FitTrigIntialisation:
      description: |-
        Provides initial estimates for model parameters
        as parseable expressions.
      required: []
      properties:
        omega:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: '2 * math.pi / 2'
        hshift:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: 0
        vscale:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: 1
        vshift:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: 0
        drift:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: 0
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - Exp Fitting
    # --------------------------------

    FitExpConfig:
      description: |-
        Settings used to fit exponential curve to parts of model.
      type: object
      required:
        - solver
        - points
        - initial
      properties:
        solver:
          description: |-
            Settings for the solver.
          type: object
          required:
            - n-max
          properties:
            n-max:
              description: |-
                Maximum number of iterations
              type: integer
              minimum: 0
            model:
              description: |-
                Indicates whether to fit against the data or another model.
              $ref: "#/components/schemas/EnumModelKind"
              default: DATA
            mode:
              description: |-
                Determines the mode in which the fitting algorithm is executed.
              $ref: "#/components/schemas/EnumSolver"
              default: BRUTE-FORCE
          additionalProperties: false
        points:
          description: |-
            Schema for values to be used in intervals and conditions
          type: object
          additionalProperties:
            type: string
        intervals:
          description: |-
            Defines the spatial domain over which the model is to be defined.
          type: array
          items:
            $ref: "#/components/schemas/PairString"
          minItems: 1
        conditions:
          description: |-
            Provides restrictions on the exponential coefficient.
          type: array
          items:
            $ref: "#/components/schemas/FitExpCondition"
          default: []
        initial:
          $ref: "#/components/schemas/FitExpIntialisation"
      additionalProperties: false

    FitExpCondition:
      description: |-
        Conditions to define bounds on the frequency.
      type: object
      required:
        - kind
        - value
      properties:
        kind:
          description: |-
            Kind of bound.
          $ref: "#/components/schemas/EnumBoundKind"
        value:
          description: |-
            Parseable expression for the value of the bound.
          type: string
      additionalProperties: false

    FitExpIntialisation:
      description: |-
        Provides initial estimates for model parameters
        as parseable expressions.
      required: []
      properties:
        beta:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: 0
        vshift:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: 1
        vscale:
          anyOf:
            - type: string
            - type: integer
            - type: number
          default: 0
      additionalProperties: false

    # --------------------------------
    # DATA TYPE - Pair String
    # --------------------------------

    PairString:
      type: array
      items:
        type: string
      minItems: 2
      maxItems: 2

    # ----------------------------------------------------------------
    # ENUMS
    # ----------------------------------------------------------------

    # --------------------------------
    # ENUM Critical Point Type
    # --------------------------------

    EnumCriticalPoints:
      description: |-
        Enumeration of critical point types.
      type: string
      enum:
        - UNKNOWN
        - ZERO
        - MINIMUM
        - MAXIMUM
        - LOCAL-MINIMUM
        - LOCAL-MAXIMUM
        - INFLECTION
      default: UNKNOWN

    # --------------------------------
    # ENUM Kind of bound
    # --------------------------------

    EnumBoundKind:
      description: |-
        Enumeration bound types.
      type: string
      enum:
        - HSCALE-LOWER-BOUND
        - HSCALE-UPPER-BOUND
        - INVHSCALE-LOWER-BOUND
        - INVHSCALE-UPPER-BOUND

    # --------------------------------
    # ENUM Mode for model
    # --------------------------------

    EnumModelKind:
      description: |-
        Enumeration of kinds of models
      type: string
      enum:
        - DATA # original data
        - POLY-MODEL
        - TRIG-MODEL

    # --------------------------------
    # ENUM Kind of Special Pt
    # --------------------------------

    EnumSpecialPointPVKind:
      description: |-
        Enumeration of kinds of special points on P-V curve
      type: string
      enum:
        - GRADIENT
        - PRESSURE
        - VOLUME

    # --------------------------------
    # ENUM Mode for solver
    # --------------------------------

    EnumSolver:
      description: |-
        Enumeration of modi for solver.
      type: string
      enum:
        - BRUTE-FORCE
        - GRADIENT
        - HYBRID-GRADIENT
